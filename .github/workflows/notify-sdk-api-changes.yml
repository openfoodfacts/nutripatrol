---
name: Notify SDK repositories of API changes

on:
  release:
    types: [published]

jobs:
  check-api-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for API changes
        id: check-api
        env:
          RELEASE_BODY: ${{ github.event.release.body }}
          RELEASE_NAME: ${{ github.event.release.name }}
          RELEASE_TAG: ${{ github.event.release.tag_name }}
        run: |
          echo "Checking release for API changes..."
          echo "Release: $RELEASE_NAME ($RELEASE_TAG)"

          # Convert to lowercase for case-insensitive matching
          release_text=$(echo "$RELEASE_BODY" | tr '[:upper:]' '[:lower:]')

          # Check for API-related keywords
          pattern="(api|endpoint|route|breaking.*change|backward.*incompatible)"
          if echo "$release_text" | grep -E "$pattern" > /dev/null; then
            echo "✅ API changes detected in release notes!"
            echo "api_changes=true" >> $GITHUB_OUTPUT
          else
            echo "ℹ️ No API changes detected in release notes."
            echo "api_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Python script for issue creation
        if: steps.check-api.outputs.api_changes == 'true'
        run: |
          cat > create_issues.py << 'EOF'
          import json
          import os
          import sys
          import subprocess

          title = f"Update SDK for NutriPatrol API changes in {os.environ['RELEASE_TAG']}"
          
          body = f"""## 🔄 API Changes Notification

          **NutriPatrol Release:** [{os.environ['RELEASE_NAME']}]({os.environ['RELEASE_URL']})
          **Tag:** `{os.environ['RELEASE_TAG']}`

          The NutriPatrol API has been updated with changes that may affect this SDK.
          Please review the release notes and update the SDK accordingly.

          ### 📋 Release Notes
          ```
          {os.environ['RELEASE_BODY']}
          ```

          ### ✅ Action Required
          - [ ] Review the API changes in the release notes above
          - [ ] Identify which endpoints/functions are affected
          - [ ] Update SDK code to match any new or changed endpoints
          - [ ] Update SDK documentation if needed
          - [ ] Add/update tests for new functionality
          - [ ] Test SDK functionality with the new API
          - [ ] Release updated SDK version
          - [ ] Update any example code or tutorials

          ### 🔗 Useful Links
          - [NutriPatrol API Documentation](https://nutripatrol.openfoodfacts.org/api/docs)
          - [Release Notes]({os.environ['RELEASE_URL']})
          - [NutriPatrol Repository](https://github.com/openfoodfacts/nutripatrol)

          ---
          This issue was automatically created by the NutriPatrol API change notification workflow.
          If this was created in error, please let us know in the [NutriPatrol repository](https://github.com/openfoodfacts/nutripatrol/issues).
          """

          payload = {
              "title": title,
              "body": body,
              "labels": ["enhancement", "api-update"]
          }

          with open('issue_payload.json', 'w') as f:
              json.dump(payload, f, indent=2)
          EOF

      - name: Create issues in SDK repositories
        if: steps.check-api.outputs.api_changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_NAME: ${{ github.event.release.name }}
          RELEASE_TAG: ${{ github.event.release.tag_name }}
          RELEASE_URL: ${{ github.event.release.html_url }}
          RELEASE_BODY: ${{ github.event.release.body }}
        run: |
          SDK_REPOS=(
            "openfoodfacts/openfoodfacts-php"
            "openfoodfacts/openfoodfacts-js"
            "openfoodfacts/openfoodfacts-laravel"
            "openfoodfacts/openfoodfacts-python"
            "openfoodfacts/openfoodfacts-ruby"
            "openfoodfacts/openfoodfacts-java"
            "openfoodfacts/openfoodfacts-elixir"
            "openfoodfacts/openfoodfacts-dart"
            "openfoodfacts/openfoodfacts-go"
          )

          # Create the issue payload
          python3 create_issues.py

          successful_repos=()
          failed_repos=()

          for repo in "${SDK_REPOS[@]}"; do
            echo "📤 Creating issue in $repo..."

            response=$(curl -s -w "\n%{http_code}" -X POST \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              -H "User-Agent: NutriPatrol-API-Notifier" \
              "https://api.github.com/repos/$repo/issues" \
              -d @issue_payload.json)

            http_code=$(echo "$response" | tail -1)
            
            if [ "$http_code" = "201" ]; then
              echo "✅ Successfully created issue in $repo"
              successful_repos+=("$repo")
            else
              echo "❌ Failed to create issue in $repo (HTTP $http_code)"
              failed_repos+=("$repo")
            fi

            sleep 3
          done

          echo ""
          echo "📊 Summary:"
          echo "✅ Successful: ${#successful_repos[@]} repositories"
          echo "❌ Failed: ${#failed_repos[@]} repositories"

          if [ ${#successful_repos[@]} -gt 0 ]; then
            echo "✅ Issues created successfully in:"
            printf '   - %s\n' "${successful_repos[@]}"
          fi

          if [ ${#failed_repos[@]} -gt 0 ]; then
            echo "❌ Failed to create issues in:"
            printf '   - %s\n' "${failed_repos[@]}"
          fi

          echo "🎉 All SDK repositories have been notified of API changes!"
